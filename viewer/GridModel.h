/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class GridModel */

#ifndef _Included_GridModel
#define _Included_GridModel
#ifdef __cplusplus
extern "C" {
#endif
#undef GridModel_NO_DEVICE
#define GridModel_NO_DEVICE 0L
#undef GridModel_STATIC_DEVICE
#define GridModel_STATIC_DEVICE 1L
#undef GridModel_SONAR_DEVICE
#define GridModel_SONAR_DEVICE 2L
#undef GridModel_CAMERA_DEVICE
#define GridModel_CAMERA_DEVICE 3L
#undef GridModel_GRID_SIZE
#define GridModel_GRID_SIZE 500L
#undef GridModel_SOURCE_NONE
#define GridModel_SOURCE_NONE 0L
#undef GridModel_SOURCE_LIVE
#define GridModel_SOURCE_LIVE 1L
#undef GridModel_SOURCE_RECORDED
#define GridModel_SOURCE_RECORDED 2L
#undef GridModel_SOURCE_STATIC
#define GridModel_SOURCE_STATIC 3L
#undef GridModel_SONAR_MODEL_CELL
#define GridModel_SONAR_MODEL_CELL 0L
#undef GridModel_SONAR_MODEL_AXIS
#define GridModel_SONAR_MODEL_AXIS 1L
#undef GridModel_SONAR_MODEL_CONE
#define GridModel_SONAR_MODEL_CONE 2L
#undef GridModel_MAX_UNDO_HISTORY
#define GridModel_MAX_UNDO_HISTORY 160L
/*
 * Class:     GridModel
 * Method:    setMapUpdateListener
 * Signature: (LGridModel$MapUpdateListener;)V
 */
JNIEXPORT void JNICALL Java_GridModel_setMapUpdateListener
  (JNIEnv *, jobject, jobject);

/*
 * Class:     GridModel
 * Method:    openLiveConnection
 * Signature: (Ljava/lang/String;Z)I
 */
JNIEXPORT jint JNICALL Java_GridModel_openLiveConnection
  (JNIEnv *, jobject, jstring, jboolean);

/*
 * Class:     GridModel
 * Method:    openFileConnection
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_GridModel_openFileConnection
  (JNIEnv *, jobject, jstring);

/*
 * Class:     GridModel
 * Method:    resetFileConnection
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_GridModel_resetFileConnection
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    setSonarModel
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_GridModel_setSonarModel
  (JNIEnv *, jobject, jint);

/*
 * Class:     GridModel
 * Method:    getSonarModel
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_GridModel_getSonarModel
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    setSonarEnabled
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_GridModel_setSonarEnabled
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     GridModel
 * Method:    getSonarBeta
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_GridModel_getSonarBeta
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    setSonarBeta
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_GridModel_setSonarBeta
  (JNIEnv *, jobject, jint);

/*
 * Class:     GridModel
 * Method:    getMaxOccupied
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_GridModel_getMaxOccupied
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    setMaxOccupied
 * Signature: (F)F
 */
JNIEXPORT jfloat JNICALL Java_GridModel_setMaxOccupied
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     GridModel
 * Method:    getMaxOccupiedII
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_GridModel_getMaxOccupiedII
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    setMaxOccupiedII
 * Signature: (F)F
 */
JNIEXPORT jfloat JNICALL Java_GridModel_setMaxOccupiedII
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     GridModel
 * Method:    getRegionIWidth
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_GridModel_getRegionIWidth
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    setRegionIWidth
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_GridModel_setRegionIWidth
  (JNIEnv *, jobject, jint);

/*
 * Class:     GridModel
 * Method:    setIgnoreObstructed
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_GridModel_setIgnoreObstructed
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     GridModel
 * Method:    getIgnoreObstructed
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_GridModel_getIgnoreObstructed
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    setIgnoreOutOfRange
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_GridModel_setIgnoreOutOfRange
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     GridModel
 * Method:    getIgnoreOutOfRange
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_GridModel_getIgnoreOutOfRange
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    getOutOfRangeConversion
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_GridModel_getOutOfRangeConversion
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    setOutOfRangeConversion
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_GridModel_setOutOfRangeConversion
  (JNIEnv *, jobject, jint);

/*
 * Class:     GridModel
 * Method:    getCellSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_GridModel_getCellSize
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    setCellSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_GridModel_setCellSize
  (JNIEnv *, jobject, jint);

/*
 * Class:     GridModel
 * Method:    getLocalMapSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_GridModel_getLocalMapSize
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    setLocalMapSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_GridModel_setLocalMapSize
  (JNIEnv *, jobject, jint);

/*
 * Class:     GridModel
 * Method:    getLocalizationEnabled
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_GridModel_getLocalizationEnabled
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    setLocalizationEnabled
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_GridModel_setLocalizationEnabled
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     GridModel
 * Method:    getObstructedCertainty
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_GridModel_getObstructedCertainty
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    setObstructedCertainty
 * Signature: (F)F
 */
JNIEXPORT jfloat JNICALL Java_GridModel_setObstructedCertainty
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     GridModel
 * Method:    getMotionMinHeight
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_GridModel_getMotionMinHeight
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    setMotionMinHeight
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_GridModel_setMotionMinHeight
  (JNIEnv *, jobject, jint);

/*
 * Class:     GridModel
 * Method:    getMotionMinWidth
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_GridModel_getMotionMinWidth
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    setMotionMinWidth
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_GridModel_setMotionMinWidth
  (JNIEnv *, jobject, jint);

/*
 * Class:     GridModel
 * Method:    getMotionUnitDistance
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_GridModel_getMotionUnitDistance
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    setMotionUnitDistance
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_GridModel_setMotionUnitDistance
  (JNIEnv *, jobject, jint);

/*
 * Class:     GridModel
 * Method:    getMotionUnitTurn
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_GridModel_getMotionUnitTurn
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    setMotionUnitTurn
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_GridModel_setMotionUnitTurn
  (JNIEnv *, jobject, jint);

/*
 * Class:     GridModel
 * Method:    getMotionGaussSigma
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_GridModel_getMotionGaussSigma
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    setMotionGaussSigma
 * Signature: (F)F
 */
JNIEXPORT jfloat JNICALL Java_GridModel_setMotionGaussSigma
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     GridModel
 * Method:    getMotionBendFactor
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_GridModel_getMotionBendFactor
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    setMotionBendFactor
 * Signature: (F)F
 */
JNIEXPORT jfloat JNICALL Java_GridModel_setMotionBendFactor
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     GridModel
 * Method:    runMapper
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_GridModel_runMapper
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    stepSonarMapper
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_GridModel_stepSonarMapper
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    stepLogMapper
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_GridModel_stepLogMapper
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    localize
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_GridModel_localize
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    integrate
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_GridModel_integrate
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    clearMap
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_GridModel_clearMap
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    emptyMap
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_GridModel_emptyMap
  (JNIEnv *, jobject);

/*
 * Class:     GridModel
 * Method:    saveMap
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_GridModel_saveMap
  (JNIEnv *, jobject, jstring);

/*
 * Class:     GridModel
 * Method:    saveSettings
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_GridModel_saveSettings
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
